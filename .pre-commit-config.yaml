repos:
  # Prevent commits to the main branch.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: no-commit-to-branch
        name: ensure we are not committing to branch `main`
        args:
          - --branch=main
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args:
          - --fix=lf
      - id: name-tests-test
        args:
          - --pytest-test-first
      - id: pretty-format-json
        args:
          - --autofix
      - id: trailing-whitespace

  # Sort Python imports using `isort`.
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: sort Python imports using isort
        args:
          - --force-grid-wrap=0
          - --line-length=100
          - --multi-line=3
          - --overwrite-in-place
          - --profile=black
          - --trailing-comma
          - --use-parentheses

  # Remove all unused imports for Python files.
  - repo: https://github.com/hadialqattan/pycln
    rev: v2.4.0
    hooks:
      - id: pycln
        name: remove unused Python imports using pycln

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        name: format Python code using black
        args:
          - --line-length=100
          - --verbose

  # Lint Python files using `ruff`.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.4.8
    hooks:
      - id: ruff
        name: lint Python using ruff
        args:
          - --diff
          - --line-length=100
          - --respect-gitignore
          - --verbose

  # Markdown formatting
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        name: format Markdown using mdformat
        args:
          - --wrap=100
        additional_dependencies:
          - mdformat-myst==0.1.5
          - mdformat_tables==0.4.1

  # Check docstrings are formatted correctly
  - repo: https://github.com/jsh9/pydoclint
    rev: 0.4.1
    hooks:
      - id: pydoclint
        args:
          - --config=pyproject.toml

  # Run `flake8` on Python files.
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        name: inspect Python code using flake8
        args:
          - --verbose
        additional_dependencies:
          - flake8-annotations==3.1.1
          - flake8-builtins==2.5.0
          - flake8-debugger==4.1.2
          - flake8-docstrings==1.7.0
          - flake8-eradicate==1.5.0
          - flake8-markdown==0.5.0
          - flake8-print==5.0.0
          - flake8-pyproject==1.2.3
